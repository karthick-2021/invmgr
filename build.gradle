plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.invmgr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'io.springfox:springfox-swagger2:2.6.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}


task stage(dependsOn: ['bootJar'])

tasks.stage.doLast() {
	delete fileTree(dir: "build/distributions")
	delete fileTree(dir: "build/assetCompile")
	delete fileTree(dir: "build/distributions")
	delete fileTree(dir: "build/libs", exclude: "*.jar") //delete everything except jar file inside build folder
}

jar { //Don't package test folders and files
	exclude "test/**"
	exclude "test/**/**"
}

build.mustRunAfter clean //First clean then build to avoid cache issues etc

gradle.taskGraph.whenReady {
	taskGraph ->
		if (taskGraph.hasTask(stage)) { //Don't run test on heroku
			test.enabled = false
		}
}

bootJar { //Exclude test files when pack boot jar file
	enabled = true
	classifier = 'boot'
	exclude "test/**"
	exclude "test/**/**"
}